#version 430

const vec3 vtx[] = {
  vec3(-10.0,  10.0, -10.0),
  vec3(-10.0, -10.0, -10.0),
  vec3( 10.0, -10.0, -10.0),
  vec3( 10.0, -10.0, -10.0),
  vec3( 10.0,  10.0, -10.0),
  vec3(-10.0,  10.0, -10.0),

  vec3(-10.0, -10.0,  10.0),
  vec3(-10.0, -10.0, -10.0),
  vec3(-10.0,  10.0, -10.0),
  vec3(-10.0,  10.0, -10.0),
  vec3(-10.0,  10.0,  10.0),
  vec3(-10.0, -10.0,  10.0),

  vec3( 10.0, -10.0, -10.0),
  vec3( 10.0, -10.0,  10.0),
  vec3( 10.0,  10.0,  10.0),
  vec3( 10.0,  10.0,  10.0),
  vec3( 10.0,  10.0, -10.0),
  vec3( 10.0, -10.0, -10.0),

  vec3(-10.0, -10.0,  10.0),
  vec3(-10.0,  10.0,  10.0),
  vec3( 10.0,  10.0,  10.0),
  vec3( 10.0,  10.0,  10.0),
  vec3( 10.0, -10.0,  10.0),
  vec3(-10.0, -10.0,  10.0),

  vec3(-10.0,  10.0, -10.0),
  vec3( 10.0,  10.0, -10.0),
  vec3( 10.0,  10.0,  10.0),
  vec3( 10.0,  10.0,  10.0),
  vec3(-10.0,  10.0,  10.0),
  vec3(-10.0,  10.0, -10.0),

  vec3(-10.0, -10.0, -10.0),
  vec3(-10.0, -10.0,  10.0),
  vec3( 10.0, -10.0, -10.0),
  vec3( 10.0, -10.0, -10.0),
  vec3(-10.0, -10.0,  10.0),
  vec3( 10.0, -10.0,  10.0),
};

out vec3 fTexCoords;

layout(std430, binding = 0) buffer MatrixBlock {
  mat4 uProj;
  mat4 uView;
};

void main() {
  fTexCoords = vtx[gl_VertexID];
  gl_Position = uProj * uView * vec4(fTexCoords, 1.0);
}
